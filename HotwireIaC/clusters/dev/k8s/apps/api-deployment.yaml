apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: apps
spec:
  replicas: 1
  selector: { matchLabels: { app: api } }
  template:
    metadata: { labels: { app: api } }
    spec:
      containers:
        - name: api
          image: 927588815039.dkr.ecr.us-east-1.amazonaws.com/fng:latest
          ports: [ { containerPort: 3001 } ]
          env:
            - name: NODE_ENV
              value: "production"
            - name: JWT_SECRET
              value: "YourSuperSecureJWT-Secret123!MinimumThirtyTwoCharsForJWT2024Development"
            - name: JWT_EXPIRES_IN
              value: "1h"
            - name: LEGACY_API_URL
              value: "http://mock-legacy-api:8080/api"
            - name: LEGACY_API_TIMEOUT
              value: "10000"
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
          readinessProbe:
            httpGet: { path: "/health", port: 3001 }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/health", port: 3001 }
            initialDelaySeconds: 20
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: apps
spec:
  selector: { app: api }
  ports: [ { port: 3001, targetPort: 3001, name: http } ]
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: apps
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts: [ "api.hw-fng.com" ]
      secretName: api-tls
  rules:
    - host: api.hw-fng.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: { name: api, port: { number: 3001 } }
