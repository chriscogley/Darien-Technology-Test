apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  namespace: monitoring
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [50ms, 100ms, 200ms, 400ms, 800ms, 1s, 2s, 5s, 10s]
        dimensions:
          - name: http.method
          - name: http.route
          - name: http.target
          - name: peer.service
          - name: status.code
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
    processors:
      batch: {}
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [spanmetrics]
        metrics/spanmetrics:
          receivers: [spanmetrics]
          processors: [batch]
          exporters: [prometheus]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  replicas: 1
  selector: { matchLabels: { app: otel-collector } }
  template:
    metadata: { labels: { app: otel-collector } }
    spec:
      containers:
        - name: otelcol
          image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector:0.111.0
          args: ["--config=/config/config.yaml"]
          ports:
            - name: otlp-grpc
              containerPort: 4317
            - name: otlp-http
              containerPort: 4318
            - name: prom-exp
              containerPort: 8889
          resources:
            requests: { cpu: "50m", memory: "100Mi" }
            limits:   { memory: "200Mi" }
          volumeMounts:
            - name: cfg
              mountPath: /config
      volumes:
        - name: cfg
          configMap:
            name: otel-collector-conf
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: monitoring
  labels:
    app: otel-collector
spec:
  selector:
    app: otel-collector
  ports:
    - name: metrics
      port: 8889
      targetPort: 8889
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otel-collector
  namespace: monitoring
  labels:
    release: kube-prometheus-stack
spec:
  jobLabel: app
  selector:
    matchLabels:
      app: otel-collector
  namespaceSelector:
    matchNames: ["monitoring"]
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
